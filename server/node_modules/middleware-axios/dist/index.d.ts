import { AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosDefaults } from 'axios';
export declare type MethodName = 'get' | 'delete' | 'head' | 'options' | 'post' | 'put' | 'patch';
export interface Next<R> {
    (config: AxiosRequestConfig): Promise<AxiosResponse<R>>;
}
export interface Middleware<R> {
    (requestConfig: AxiosRequestConfig, next: Next<R>, instanceDefaults: AxiosDefaults): Promise<void>;
}
export interface AxiosInstanceWrapper {
    request: AxiosInstance['request'];
    get: AxiosInstance['get'];
    delete: AxiosInstance['delete'];
    head: AxiosInstance['head'];
    options: AxiosInstance['options'];
    post: AxiosInstance['post'];
    put: AxiosInstance['put'];
    patch: AxiosInstance['patch'];
    axiosInstance: AxiosInstance;
    use: <R = any>(middleware: Middleware<R>) => AxiosInstanceWrapper;
}
export declare const create: (instanceConfig: AxiosRequestConfig) => AxiosInstanceWrapper;
